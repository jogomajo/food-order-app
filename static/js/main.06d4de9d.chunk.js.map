{"version":3,"sources":["components/Cart/Checkout.module.scss","components/Cart/Cart.module.scss","components/Cart/CartItem.module.scss","components/Layout/HeaderCartButton.module.scss","components/Meals/MealItem/MealItem.module.scss","components/Meals/AvailableMeals.module.scss","components/UI/Modal.module.scss","components/Layout/Header.module.scss","components/Meals/MealsSummary.module.scss","components/UI/Card.module.scss","components/UI/Input.module.scss","components/Meals/MealItem/MealItemForm.module.scss","assets/meals.jpg","components/Cart/CartIcon.tsx","store/cart-context.tsx","components/Layout/HeaderCartButton.tsx","components/Layout/Header.tsx","components/Meals/MealsSummary.tsx","components/UI/Card.tsx","components/UI/Input.tsx","components/Meals/MealItem/MealItemForm.tsx","components/Meals/MealItem/MealItem.tsx","components/Meals/AvailableMeals.tsx","components/Meals/Meals.tsx","components/UI/Modal.tsx","components/Cart/CartItem.tsx","components/Cart/Checkout.tsx","components/Cart/Cart.tsx","store/CartProvider.tsx","App.tsx","index.tsx"],"names":["module","exports","CartIcon","xmlns","viewBox","fill","d","CartContext","React","createContext","items","totalAmount","addItem","removeItem","clearCart","HeaderCartButton","onClick","useState","btnIsHighlighted","setBtnIsHighlighted","cartCtx","useContext","numberOfCartItems","reduce","curNumber","item","amount","btnClasses","classes","button","bump","useEffect","length","timer","setTimeout","clearTimeout","className","badge","Header","onShowCart","header","src","mealsImage","alt","MealsSummary","summary","Card","children","card","Input","forwardRef","ref","label","input","htmlFor","id","MealItemForm","onAddToCart","amountIsValid","setAmountIsValid","amountInputRef","useRef","form","onSubmit","event","preventDefault","enteredAmountNumber","current","value","type","min","max","step","defaultValue","MealItem","name","description","price","priceRounded","toFixed","meal","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","a","fetch","response","ok","Error","json","key","responseData","loadedMeals","push","fetchMeals","catch","error","message","MealsLoading","MealsError","mealsList","map","Meals","Backdrop","onClose","backdrop","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDOM","createPortal","CartItem","onRemove","onAdd","actions","isEmpty","trim","Checkout","onCancel","onConfirm","street","city","postalCode","formInputsValidity","setFormInputsValidity","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","enteredName","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","submit","Cart","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","hasItems","cartItemRemoveHandler","cartItemAddHandler","submitOrderHandler","userData","method","body","JSON","stringify","user","orderdItems","cartItems","bind","modalActions","cartModalContent","total","isSubmittingModalContent","didSubmitModalContent","defaultCartState","cartReducer","state","action","updatedItems","updatedTotalAmount","exisitingCartItemIndex","findIndex","exisitingCartItem","updatedItem","concat","existingItem","updatedtotalAmount","filter","CartProvider","useReducer","cartState","dispatchCartAction","cartContext","Provider","App","cartIsShown","setCartIsShown","render","StrictMode"],"mappings":"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","file":"static/js/main.06d4de9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__2iprK\",\"control\":\"Checkout_control__D9dic\",\"actions\":\"Checkout_actions__zJRhd\",\"submit\":\"Checkout_submit__1G3e5\",\"invalid\":\"Checkout_invalid__3_Zuh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__ZcXq8\",\"total\":\"Cart_total__fJOKH\",\"actions\":\"Cart_actions__26EAb\",\"button--alt\":\"Cart_button--alt__1CDdh\",\"button\":\"Cart_button__2IYwo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__4MIA_\",\"summary\":\"CartItem_summary__2WqQ1\",\"price\":\"CartItem_price__Xd2JU\",\"amount\":\"CartItem_amount__3869y\",\"actions\":\"CartItem_actions__tbINl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__1hnrn\",\"badge\":\"HeaderCartButton_badge__1G2hO\",\"icon\":\"HeaderCartButton_icon__22_P_\",\"bump\":\"HeaderCartButton_bump__T7QZM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meal\":\"MealItem_meal__ydGoa\",\"description\":\"MealItem_description__y85Qp\",\"price\":\"MealItem_price__1pFHJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals\":\"AvailableMeals_meals__1fc5r\",\"meals-appear\":\"AvailableMeals_meals-appear__2dcfz\",\"MealsLoading\":\"AvailableMeals_MealsLoading__HR2pM\",\"MealsError\":\"AvailableMeals_MealsError__wVF2O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__-W3S_\",\"modal\":\"Modal_modal__3cxdv\",\"slide-down\":\"Modal_slide-down__1td3U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3w1oQ\",\"main-image\":\"Header_main-image__1DKVn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"MealsSummary_summary__2Jeu2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2Nq48\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__1HLIo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MealItemForm_form__2kAfk\"};","export default __webpack_public_path__ + \"static/media/meals.2971f633.jpg\";","const CartIcon: React.FC = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 20 20\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default CartIcon;\r\n","import React from 'react';\r\n\r\ninterface ICartContext {\r\n  items: ItemTypes[];\r\n  totalAmount: number;\r\n  addItem: (item: ItemTypes) => void;\r\n  removeItem: (id: string) => void;\r\n  clearCart: () => void;\r\n}\r\n\r\nexport type ItemTypes = {\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  id: string;\r\n  amount: number;\r\n};\r\n\r\ntype AddAction = {\r\n  type: 'ADD';\r\n  item: ItemTypes;\r\n};\r\n\r\ntype RemoveAction = {\r\n  type: 'REMOVE';\r\n  id: string;\r\n};\r\n\r\ntype ClearAction = {\r\n  type: 'CLEAR';\r\n};\r\n\r\nexport type CartReducerActions = AddAction | RemoveAction | ClearAction;\r\n\r\nexport const CartContext = React.createContext<ICartContext>({\r\n  items: [],\r\n  totalAmount: 0,\r\n  addItem: () => {},\r\n  removeItem: () => {},\r\n  clearCart: () => {},\r\n});\r\n","import { useContext, useEffect, useState } from 'react';\r\n\r\nimport CartIcon from '../Cart/CartIcon';\r\nimport { CartContext } from '../../store/cart-context';\r\n\r\nimport classes from './HeaderCartButton.module.scss';\r\n\r\ninterface IProps {\r\n  onClick: () => void;\r\n}\r\n\r\nconst HeaderCartButton: React.FC<IProps> = ({ onClick }) => {\r\n  const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\r\n\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const numberOfCartItems = cartCtx.items.reduce((curNumber, item) => {\r\n    return curNumber + item.amount;\r\n  }, 0);\r\n\r\n  const btnClasses = `${classes.button} ${\r\n    btnIsHighlighted ? classes.bump : ''\r\n  }`;\r\n\r\n  useEffect(() => {\r\n    if (cartCtx.items.length === 0) {\r\n      return;\r\n    }\r\n\r\n    setBtnIsHighlighted(true);\r\n\r\n    const timer = setTimeout(() => {\r\n      setBtnIsHighlighted(false);\r\n    }, 300);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [cartCtx.items]);\r\n\r\n  return (\r\n    <button className={btnClasses} onClick={onClick}>\r\n      <span>\r\n        <CartIcon />\r\n      </span>\r\n      <span>Your Cart</span>\r\n      <span className={classes.badge}>{numberOfCartItems}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default HeaderCartButton;\r\n","import mealsImage from '../../assets/meals.jpg';\r\n\r\nimport HeaderCartButton from './HeaderCartButton';\r\n\r\nimport classes from './Header.module.scss';\r\n\r\ninterface IProps {\r\n  onShowCart: () => void;\r\n}\r\n\r\nconst Header: React.FC<IProps> = ({ onShowCart }) => {\r\n  return (\r\n    <>\r\n      <header className={classes.header}>\r\n        <h1>ReactMeals</h1>\r\n        <HeaderCartButton onClick={onShowCart} />\r\n      </header>\r\n      <div className={classes['main-image']}>\r\n        <img src={mealsImage} alt=\"A table full of delicious food!\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import classes from './MealsSummary.module.scss';\r\n\r\nconst MealsSummary: React.FC = () => {\r\n  return (\r\n    <section className={classes.summary}>\r\n      <h2>Delicious Food, Delivered To You</h2>\r\n      <p>\r\n        Choose your favorite meal from out broad selection of available meals\r\n        and enjoy a delicious lunch or dinner at home.\r\n      </p>\r\n      <p>\r\n        All our meals are cooked with high-quality ingredients, just-in-time and\r\n        of course by experienced chefs!\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MealsSummary;\r\n","import classes from './Card.module.scss';\r\n\r\nconst Card: React.FC = ({ children }) => {\r\n  return <div className={classes.card}>{children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React, { forwardRef } from 'react';\r\n\r\nimport classes from './Input.module.scss';\r\n\r\ninterface IProps {\r\n  label: string;\r\n  input: {\r\n    id: string;\r\n    type: string;\r\n    min: string;\r\n    max: string;\r\n    step: string;\r\n    defaultValue: string;\r\n  };\r\n}\r\n\r\nconst Input = forwardRef<HTMLInputElement, IProps>(({ label, input }, ref) => {\r\n  return (\r\n    <div className={classes.input}>\r\n      <label htmlFor={input.id}>{label}</label>\r\n      <input ref={ref} {...input} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Input;\r\n","import { useRef, FormEvent, useState } from 'react';\r\n\r\nimport Input from '../../UI/Input';\r\n\r\nimport classes from './MealItemForm.module.scss';\r\n\r\ninterface IProps {\r\n  id: string;\r\n  onAddToCart: (amount: number) => void;\r\n}\r\n\r\nconst MealItemForm: React.FC<IProps> = ({ id, onAddToCart }) => {\r\n  const [amountIsValid, setAmountIsValid] = useState(true);\r\n\r\n  const amountInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const submitHandler = (event: FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    let enteredAmount = '1';\r\n    let enteredAmountNumber = 1;\r\n\r\n    if (amountInputRef.current) {\r\n      enteredAmount = amountInputRef.current.value;\r\n      enteredAmountNumber = +enteredAmount;\r\n    }\r\n\r\n    if (enteredAmountNumber < 1 || enteredAmountNumber > 5) {\r\n      setAmountIsValid(false);\r\n      return;\r\n    }\r\n\r\n    onAddToCart(enteredAmountNumber);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={submitHandler}>\r\n      <Input\r\n        ref={amountInputRef}\r\n        label=\"Amount\"\r\n        input={{\r\n          id: 'amount_' + id,\r\n          type: 'number',\r\n          min: '1',\r\n          max: '5',\r\n          step: '1',\r\n          defaultValue: '1',\r\n        }}\r\n      />\r\n      <button>+ Add</button>\r\n      {!amountIsValid && <p>Please enter a valid amount (1-5)</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MealItemForm;\r\n","import { useContext } from 'react';\r\n\r\nimport MealItemForm from './MealItemForm';\r\nimport { CartContext } from '../../../store/cart-context';\r\n\r\nimport classes from './MealItem.module.scss';\r\n\r\ninterface IProps {\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  id: string;\r\n}\r\n\r\nconst MealItem: React.FC<IProps> = ({ name, description, price, id }) => {\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const priceRounded = `$${price.toFixed(2)}`;\r\n\r\n  const addToCartHandler = (amount: number) => {\r\n    cartCtx.addItem({\r\n      id: id,\r\n      name: name,\r\n      amount: amount,\r\n      price: price,\r\n      description: description,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <li className={classes.meal}>\r\n      <div>\r\n        <h3>{name}</h3>\r\n        <div className={classes.description}>{description}</div>\r\n        <div className={classes.price}>{priceRounded}</div>\r\n      </div>\r\n      <div>\r\n        <MealItemForm id={id} onAddToCart={addToCartHandler} />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MealItem;\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport MealItem from './MealItem/MealItem';\r\n\r\nimport classes from './AvailableMeals.module.scss';\r\n\r\ntype LoadedMealsTypes = {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n}[];\r\n\r\ntype ResponseDataTypes = {\r\n  [key: string]: {\r\n    name: string;\r\n    description: string;\r\n    price: number;\r\n  };\r\n};\r\n\r\nconst AvailableMeals: React.FC = () => {\r\n  const [meals, setMeals] = useState<LoadedMealsTypes>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [httpError, setHttpError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n      const response = await fetch(\r\n        'https://food-order-app-66022-default-rtdb.europe-west1.firebasedatabase.app/meals.json'\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Something went wrong!');\r\n      }\r\n\r\n      const responseData: ResponseDataTypes = await response.json();\r\n\r\n      const loadedMeals = [];\r\n\r\n      for (const key in responseData) {\r\n        loadedMeals.push({\r\n          id: key,\r\n          name: responseData[key].name,\r\n          description: responseData[key].description,\r\n          price: responseData[key].price,\r\n        });\r\n      }\r\n\r\n      setMeals(loadedMeals);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchMeals().catch((error) => {\r\n      setIsLoading(false);\r\n      setHttpError(error.message);\r\n    });\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section className={classes.MealsLoading}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <section className={classes.MealsError}>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  const mealsList = meals.map((meal) => (\r\n    <MealItem\r\n      key={meal.id}\r\n      id={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n","import MealsSummary from './MealsSummary';\r\nimport AvailableMeals from './AvailableMeals';\r\n\r\nconst Meals: React.FC = () => {\r\n  return (\r\n    <>\r\n      <MealsSummary />\r\n      <AvailableMeals />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Meals;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport classes from './Modal.module.scss';\r\n\r\ninterface IBackdrop {\r\n  onClose: () => void;\r\n}\r\n\r\ninterface IModal {\r\n  onClose: () => void;\r\n}\r\n\r\nconst Backdrop: React.FC<IBackdrop> = ({ onClose }) => {\r\n  return <div className={classes.backdrop} onClick={onClose} />;\r\n};\r\n\r\nconst ModalOverlay: React.FC = ({ children }) => {\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div className={classes.content}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst portalElement = document.getElementById('overlays') as HTMLDivElement;\r\n\r\nconst Modal: React.FC<IModal> = ({ children, onClose }) => {\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(<Backdrop onClose={onClose} />, portalElement)}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay>{children}</ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\nimport classes from './CartItem.module.scss';\n\ninterface ICartItemProps {\n  name: string;\n  amount: number;\n  price: number;\n  onRemove: () => void;\n  onAdd: () => void;\n}\n\nconst CartItem: React.FC<ICartItemProps> = ({\n  name,\n  amount,\n  price,\n  onRemove,\n  onAdd,\n}) => {\n  const priceRounded = `$${price.toFixed(2)}`;\n\n  return (\n    <li className={classes['cart-item']}>\n      <div>\n        <h2>{name}</h2>\n        <div className={classes.summary}>\n          <span className={classes.price}>{priceRounded}</span>\n          <span className={classes.amount}>x {amount}</span>\n        </div>\n      </div>\n      <div className={classes.actions}>\n        <button onClick={onRemove}>−</button>\n        <button onClick={onAdd}>+</button>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { FormEvent, useRef, useState } from 'react';\r\n\r\nimport { UserDataTypes } from './Cart';\r\n\r\nimport classes from './Checkout.module.scss';\r\n\r\ninterface ICheckoutProps {\r\n  onCancel: () => void;\r\n  onConfirm: (user: UserDataTypes) => void;\r\n}\r\n\r\nconst isEmpty = (value: string): boolean => value.trim() === '';\r\nconst isFiveChars = (value: string): boolean => value.trim().length === 5;\r\n\r\nconst Checkout: React.FC<ICheckoutProps> = ({ onCancel, onConfirm }) => {\r\n  const [formInputsValidity, setFormInputsValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    city: true,\r\n    postalCode: true,\r\n  });\r\n\r\n  const nameInputRef = useRef<HTMLInputElement>(null);\r\n  const streetInputRef = useRef<HTMLInputElement>(null);\r\n  const postalCodeInputRef = useRef<HTMLInputElement>(null);\r\n  const cityInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const confirmHandler = (event: FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current ? nameInputRef.current.value : '';\r\n    const enteredStreet = streetInputRef.current\r\n      ? streetInputRef.current.value\r\n      : '';\r\n    const enteredPostalCode = postalCodeInputRef.current\r\n      ? postalCodeInputRef.current.value\r\n      : '';\r\n    const enteredCity = cityInputRef.current ? cityInputRef.current.value : '';\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\r\n\r\n    setFormInputsValidity({\r\n      name: enteredStreetIsValid,\r\n      street: enteredStreetIsValid,\r\n      city: enteredCityIsValid,\r\n      postalCode: enteredPostalCodeIsValid,\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredPostalCodeIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    onConfirm({\r\n      name: enteredName,\r\n      street: enteredStreet,\r\n      city: enteredCity,\r\n      postalCode: enteredPostalCode,\r\n    });\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${\r\n    formInputsValidity.name ? '' : classes.invalid\r\n  }`;\r\n\r\n  const streetControlClasses = `${classes.control} ${\r\n    formInputsValidity.street ? '' : classes.invalid\r\n  }`;\r\n\r\n  const postalCodeControlClasses = `${classes.control} ${\r\n    formInputsValidity.postalCode ? '' : classes.invalid\r\n  }`;\r\n\r\n  const cityControlClasses = `${classes.control} ${\r\n    formInputsValidity.city ? '' : classes.invalid\r\n  }`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\r\n        {!formInputsValidity.street && <p>Please enter a valid street!</p>}\r\n      </div>\r\n      <div className={postalCodeControlClasses}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\r\n        {!formInputsValidity.postalCode && (\r\n          <p>Please enter a valid postal code!</p>\r\n        )}\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n        {!formInputsValidity.city && <p>Please enter a valid city name!</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import { useContext, useState } from 'react';\r\n\r\nimport Modal from '../UI/Modal';\r\nimport CartItem from './CartItem';\r\nimport Checkout from './Checkout';\r\nimport { CartContext, ItemTypes } from '../../store/cart-context';\r\n\r\nimport classes from './Cart.module.scss';\r\n\r\nexport type UserDataTypes = {\r\n  name: string;\r\n  street: string;\r\n  city: string;\r\n  postalCode: string;\r\n};\r\n\r\ninterface IProps {\r\n  onClose: () => void;\r\n}\r\n\r\nconst Cart: React.FC<IProps> = ({ onClose }) => {\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [didSubmit, setDidSubmit] = useState(false);\r\n\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n\r\n  const cartItemRemoveHandler = (id: string) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  const cartItemAddHandler = (item: ItemTypes) => {\r\n    cartCtx.addItem({ ...item, amount: 1 });\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckout(true);\r\n  };\r\n\r\n  const submitOrderHandler = async (userData: UserDataTypes) => {\r\n    setIsSubmitting(true);\r\n\r\n    await fetch(\r\n      'https://food-order-app-66022-default-rtdb.europe-west1.firebasedatabase.app/orders.json',\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          user: userData,\r\n          orderdItems: cartCtx.items,\r\n        }),\r\n      }\r\n    );\r\n\r\n    setIsSubmitting(false);\r\n    setDidSubmit(true);\r\n    cartCtx.clearCart();\r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={classes['cart-items']}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const modalActions = (\r\n    <div className={classes.actions}>\r\n      <button className={classes['button--alt']} onClick={onClose}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={classes.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const cartModalContent = (\r\n    <>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {isCheckout && (\r\n        <Checkout onConfirm={submitOrderHandler} onCancel={onClose} />\r\n      )}\r\n      {!isCheckout && modalActions}\r\n    </>\r\n  );\r\n\r\n  const isSubmittingModalContent = <p>Sending order data...</p>;\r\n\r\n  const didSubmitModalContent = (\r\n    <>\r\n      <p>Successfully sent the order!</p>\r\n      <div className={classes.actions}>\r\n        <button className={classes.button} onClick={onClose}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Modal onClose={onClose}>\r\n      {!isSubmitting && !didSubmit && cartModalContent}\r\n      {isSubmitting && isSubmittingModalContent}\r\n      {didSubmit && didSubmitModalContent}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import { useReducer } from 'react';\r\n\r\nimport { CartContext } from './cart-context';\r\n\r\nimport { ItemTypes, CartReducerActions } from './cart-context';\r\n\r\nconst defaultCartState: { items: ItemTypes[]; totalAmount: number } = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state = defaultCartState, action: CartReducerActions) => {\r\n  if (action.type === 'ADD') {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    const exisitingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n\r\n    const exisitingCartItem = state.items[exisitingCartItemIndex];\r\n\r\n    let updatedItems;\r\n\r\n    if (exisitingCartItem) {\r\n      const updatedItem = {\r\n        ...exisitingCartItem,\r\n        amount: exisitingCartItem.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[exisitingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n\r\n    return { items: updatedItems, totalAmount: updatedTotalAmount };\r\n  }\r\n\r\n  if (action.type === 'REMOVE') {\r\n    const exisitingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n    const existingItem = state.items[exisitingCartItemIndex];\r\n    const updatedtotalAmount = state.totalAmount - existingItem.price;\r\n\r\n    let updatedItems;\r\n\r\n    if (existingItem.amount === 1) {\r\n      updatedItems = state.items.filter((item) => item.id !== action.id);\r\n    } else {\r\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n      updatedItems = [...state.items];\r\n      updatedItems[exisitingCartItemIndex] = updatedItem;\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedtotalAmount,\r\n    };\r\n  }\r\n\r\n  if (action.type === 'CLEAR') {\r\n    return defaultCartState;\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst CartProvider: React.FC = ({ children }) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemToCartHandler = (item: ItemTypes) => {\r\n    dispatchCartAction({ type: 'ADD', item: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id: string) => {\r\n    dispatchCartAction({ type: 'REMOVE', id: id });\r\n  };\r\n\r\n  const clearCartHandler = () => {\r\n    dispatchCartAction({ type: 'CLEAR' });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n    clearCart: clearCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>{children}</CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n","import { useState } from 'react';\r\n\r\nimport Header from './components/Layout/Header';\r\nimport Meals from './components/Meals/Meals';\r\nimport Cart from './components/Cart/Cart';\r\nimport CartProvider from './store/CartProvider';\r\n\r\nconst App: React.FC = () => {\r\n  const [cartIsShown, setCartIsShown] = useState(false);\r\n\r\n  const showCartHandler = () => {\r\n    setCartIsShown(true);\r\n  };\r\n\r\n  const hideCartHandler = () => {\r\n    setCartIsShown(false);\r\n  };\r\n\r\n  return (\r\n    <CartProvider>\r\n      {cartIsShown && <Cart onClose={hideCartHandler} />}\r\n      <Header onShowCart={showCartHandler} />\r\n      <main>\r\n        <Meals />\r\n      </main>\r\n    </CartProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}